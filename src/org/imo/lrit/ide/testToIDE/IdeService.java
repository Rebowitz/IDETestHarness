
package org.imo.lrit.ide.testToIDE;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import org.imo.lrit.test.common.TestConstants;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.2_01-hudson-189-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ideService", targetNamespace = "http://gisis.imo.org/XML/LRIT/2008", wsdlLocation = "file:/home/randrews/lrit_common/etc/IDE-DC.wsdl")
public class IdeService
    extends Service
{

    private final static URL IDESERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(org.imo.lrit.ide.testToIDE.IdeService.class.getName());

    static {
        URL url = null;
        try {
//            URL baseUrl;
 //           baseUrl = org.imo.lrit.ide.testToIDE.IdeService.class.getResource(".");
 //           url = new URL(baseUrl, TestConstants.WEBSERVICES_IDE_WSDL_LOCATION);
            url = new URL(TestConstants.WEBSERVICES_IDE_WSDL_LOCATION);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: " + TestConstants.WEBSERVICES_IDE_WSDL_LOCATION + ", retrying as a local file");
            logger.warning(e.getMessage());
        }
        IDESERVICE_WSDL_LOCATION = url;
    }

    public IdeService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IdeService() {
        super(IDESERVICE_WSDL_LOCATION, new QName("http://gisis.imo.org/XML/LRIT/2008", "ideService"));
    }

    /**
     * 
     * @return
     *     returns IdePortType
     */
    @WebEndpoint(name = "idePort")
    public IdePortType getIdePort() {
        return super.getPort(new QName("http://gisis.imo.org/XML/LRIT/2008", "idePort"), IdePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IdePortType
     */
    @WebEndpoint(name = "idePort")
    public IdePortType getIdePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://gisis.imo.org/XML/LRIT/2008", "idePort"), IdePortType.class, features);
    }

}
